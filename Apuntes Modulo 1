"Hello World"
	#First Python Output
	print('Hello, Masters!')
----------------------------------------------
	#Check Python Version
	import sys
	print(sys.version)
----------------------------------------------
	#This is a Comment
----------------------------------------------
The error message tells you:

	where the error occurred (more useful in large notebook cells or scripts), and
	what kind of error it was (NameError)
----------------------------------------------
Data Types
	# Integer

	1
	# Float

	1.4
	# String

	"Hello, Masters!"
---------------------------------------------
	#Type() returns the variable type name [int,float,str]

	sys.float_info || sys.int_info ...
---------------------------------------------
	#Convert int to float
	float(int)
	#Converting float to int makes the float lose the decimal information
	int(float)
	#Converting strings to other datatypes
	int('1')
	#If there isn't a perfect match, you'll get an error
	float('1.2')
	#Intuitively:
	str(int) & str(float) #have no limitations
---------------------------------------------
	#Boolean data
	True #Value true
	False #Value false
	type(True) || (False) #Boolean type
	#True to int
	int(True)
	#Convert 1 to boolean
	bool(1)
	#0 to boolean
	bool(0)
	#Convert True to float
	float(True)
--------------------------------------------
Types 
	type(6/2) #The result is a float since a single '/'
	type(6//2) #The result is an int, '//' meeans integer division
--------------------------------------------
Expressions and Variables
	#Addition operation expression
	40 + 12 + 45 + 1
	#Substraction operation expression
	10 - 40
	#Multiplication operation expression
	2*4
	#Division operation expression
	10/2
	#Integer division operation expression
	10//2
	#Mathematical Expression
	30 + 2 * 40 #Translate as -> 30+(2*40)
	(30 + 2)*40 #Different

	#Variables
	x = 40 + 12 + 45 + 1
	print(x) 
	#Use other variables to make operations
	y = x/60
	y
	#Overwrite Variable with new value
	x = x/2
	x
	#Value of x
	x = 3+1*2 # x = 5
	#Value of y
	y = (3+3)/2 # y = 3
----------------------------------------------------
----------------------------------------------------
Strings
	#Everything between '' or "" is a string, including spaces, special characters, etc...
		print('hello') #Prints string
		name = 'Pepe'  #Stores String value in variable
		print(name[0]) #Prints the character at index 0 in name variable i.e.: 'P'

	#Negative indexing takes as first the last character of a string and starts as -1; move to the right to substract 1 for each index. 
		print(name[-1]) #Prints the element in index -1 in name variable i.e.: 'e'
		print(name[-4]) #Prints the first element in the string

	#Find length of a string
		len('Pepe')
	#Slicing strings
		name[0:2] = 'Pe' #Variables from index 0 to index 1; read as [starting point:length of string]
	#Strides 
		name[::2]: 'Pp' #Get every element starting at 0, with a step of 2 indexes to acquire next value
	#Concatenate
		statement = name + 'is great'
		statement
	#Print multiple times, use integer
		3*'Pepe'
	#Concatenate Strings
		age = '98' 
		name = 'Pepe'
		obituary = name + age

	#New line escape sequence
		print('Pepe \n is old')
	#Tab escape sequence
		print('Pepe \t is old')
	#Include back slash in string
		print('Pepe \\ is old')
---------------------------------------
String Operations

	# Convert all the characters in string to upper case
		a = "Pepe is old"
		print("before upper:", a)
		b = a.upper() #a.lower()
		print("After upper:", b)
	# Replace the old substring with the new target substring is the segment has been found in the string
		a = "Pepe is old"
		b = a.replace('Pepe', 'Ana')
		b
	# Find the substring in the string. Only the index of the first elment of substring in string will be the output
		name = "Pedro'
		name.find('o')
	#Print first 3 elements
		d= "ABCDEFG"
		print(d[:3]) # or print(d[0:3])
	#Stride of 2
		d= "ABCDEFG"
		print(d[::2])
	#Lower/Uppercase
		d.lower() #d.upper()
